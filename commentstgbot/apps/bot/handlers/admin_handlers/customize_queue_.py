from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from loguru import logger
from telethon import TelegramClient

from commentstgbot.apps.bot import markups
from commentstgbot.apps.bot.filters.admin_filters import AdminPrivateFilter
from commentstgbot.apps.bot.utils.queue_helpers import send_current_queues
from commentstgbot.apps.controller.classes import Request
from commentstgbot.config.config import config
from commentstgbot.db.db_main import temp
from commentstgbot.loader import bot


class AddPostGroupStates(StatesGroup):
    add = State()


async def customize_queue_menu(message: types.Message, state: FSMContext):
    await state.finish()
    await send_current_queues(message)
    await message.answer(
        "–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—å—Å—è —Å–∞–º—ã–π –ø–µ—Ä–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∞",
        reply_markup=markups.add_post_keyboard,
    )


async def add_post_start(call: types.CallbackQuery):
    await call.message.answer("–ü–µ—Ä–µ—à–ª–∏—Ç–µ –ø–æ—Å—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞")
    await AddPostGroupStates.first()


async def add_post(message: types.Message, state: FSMContext):
    try:
        request = Request.parse(message)
        logger.info(request)
        if request:
            # temp.current_posts.append(request)
            await bot.forward_message(config.bot.chat, request.from_id, request.message_id)
            await message.answer("–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
            await state.finish()
        else:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    except Exception as e:
        await message.answer("–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –µ—Å–ª–∏ —á–∞—Ç –∑–∞–∫—Ä—ã—Ç –¥–æ–±–∞–≤—å—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –≤ –∫–∞–Ω–∞–ª")
        logger.critical(e)


async def delete_post(call: types.CallbackQuery):
    try:
        # message_ids = call.data[12:]
        await call.message.delete()
        print(call.data)
        _, _, channel_id, channel_post = call.data.split('_')
        channel_id = int(channel_id)
        channel_post = int(channel_post)
        for num, r in enumerate(temp.current_posts):
            if (channel_id, channel_post) == r:
                try:
                    client: TelegramClient = config.controller.controller.client
                    # todo 08.04.2022 21:18 taima: –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É id, —á—Ç–æ–±—ã –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ —Ä–∞–∑–Ω—ã —á–∞—Ç–∞—Ö
                    await client.delete_messages(config.bot.chat, r.message_id)
                    # await r.message.delete()
                except Exception as e:
                    logger.critical(e)
                temp.current_posts.remove((channel_id, channel_post))
                await call.message.answer(f"–ü–æ—Å—Ç {(channel_id, channel_post)} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                logger.info(f"–ü–æ—Å—Ç {(channel_id, channel_post)} —É–¥–∞–ª–µ–Ω")
                break
        # if url in temp.current_posts:
        #     temp.current_posts.remove(url)
        #     await call.message.answer("–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        #     logger.info(f"–ü–æ—Å—Ç {url} —É–¥–∞–ª–µ–Ω")
        else:
            await call.message.answer("–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—á–µ—Ä–µ–¥–∏")
    except Exception as e:
        logger.exception(e)
        await call.message.answer("–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—á–µ—Ä–µ–¥–∏")


def register_customize_queue_handlers(dp: Dispatcher):
    dp.register_message_handler(customize_queue_menu, AdminPrivateFilter(), text_startswith="üî©", state="*")
    dp.register_callback_query_handler(delete_post, AdminPrivateFilter(), text_startswith="delete_post")
    dp.register_callback_query_handler(add_post_start, AdminPrivateFilter(), text_startswith="add_post")
    dp.register_message_handler(add_post, AdminPrivateFilter(), state=AddPostGroupStates)
